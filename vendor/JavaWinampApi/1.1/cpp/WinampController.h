/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class WinampController */


#ifndef _Included_WinampController
#define _Included_WinampController
#ifdef __cplusplus
extern "C" {
#endif

void initWinampHandle();

jboolean runWinamp(unsigned char* pathWinamp);

int getListPos();

void getPluginMessage(int param, int sendMessage);

/*
 * Class:     WinampController
 * Method:    run
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_run
  (JNIEnv *, jclass);
/*
 * Class:     WinampController
 * Method:    exit
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_exit
  (JNIEnv *, jclass);  
/*
 * Class:     WinampController
 * Method:    play
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_play
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    stop
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_stop
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    resume
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_resume
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    pause
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_pause
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    previousTrack
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_previousTrack
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    nextTrack
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_nextTrack
  (JNIEnv *, jclass);
  
/*
 * Class:     WinampController
 * Method:    fwd5Secs
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_fwd5Secs
  (JNIEnv *, jclass);
  
/*
 * Class:     WinampController
 * Method:    fwd5Secs
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_rew5Secs
  (JNIEnv *, jclass);  
  
/*
 * Class:     WinampController
 * Method:    increaseVolume
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_increaseVolume
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    decreaseVolume
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_decreaseVolume
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    increaseVolumePercent
 * Signature: (I)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_increaseVolumePercent
  (JNIEnv *, jclass, jint);

/*
 * Class:     WinampController
 * Method:    decreaseVolumePercent
 * Signature: (I)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_decreaseVolumePercent
  (JNIEnv *, jclass, jint);

/*
 * Class:     WinampController
 * Method:    setVolume
 * Signature: (I)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_setVolume
  (JNIEnv *, jclass, jint);
  
/*
 * Class:     WinampController
 * Method:    setVolume
 * Signature: (I)V
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getVolume
  (JNIEnv *, jclass, jint);  

/*
 * Class:     WinampController
 * Method:    restart
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_restart
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    setPlaylistPosition
 * Signature: (I)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_setPlaylistPosition
  (JNIEnv *, jclass, jint);

/*
 * Class:     WinampController
 * Method:    clearPlayList
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_clearPlayList
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    refreshPlayListCache
 * Signature: ()V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_refreshPlayListCache
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    getPlayListLength
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getPlayListLength
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    writePlayListToFile
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_writePlayListToFile
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    isShuffleStatusOn
 * Signature: ()Z
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_isShuffleStatusOn
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    isRepeatStatusOn
 * Signature: ()Z
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_isRepeatStatusOn
  (JNIEnv *, jclass);

/*
 * Class:     WinampController
 * Method:    setRepeatStatusOn
 * Signature: (Z)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_setRepeatStatusOn
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     WinampController
 * Method:    setShuffleStatusOn
 * Signature: (Z)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_setShuffleStatusOn
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     WinampController
 * Method:    appendToPlayList
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT jboolean JNICALL Java_com_qotsa_jni_controller_JNIWinamp_appendToPlayList
  (JNIEnv *, jclass, jstring);

/*
 * Class:     WinampController
 * Method:    getStatus
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getStatus
  (JNIEnv *, jclass);
  
/*
 * Class:     WinampController
 * Method:    getListPos
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getListPos
  (JNIEnv *, jclass);  

/*
 * Class:     WinampController
 * Method:    getTitle
 * Signature: ()I
 */  
JNIEXPORT jstring JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getTitle
  (JNIEnv *, jclass);    

/*
 * Class:     WinampController
 * Method:    getTime
 * Signature: ()I
 */    
JNIEXPORT jint JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getTime
  (JNIEnv *, jclass, jint);      
  
/*
 * Class:     WinampController
 * Method:    getFileNameInList
 * Signature: ()I
 */      
JNIEXPORT jstring JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getFileNameInList
  (JNIEnv *, jclass, jint);

/*
 * Class:     WinampController
 * Method:    getFileNamePlaying
 * Signature: ()I
 */        
JNIEXPORT jstring JNICALL Java_com_qotsa_jni_controller_JNIWinamp_getFileNamePlaying
  (JNIEnv *, jobject);
  
#ifdef __cplusplus
}
#endif
#endif
