/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>

/* Header for class de_hardcode_jxinput_directinput_DirectInputDriver */

#ifndef _Included_de_hardcode_jxinput_directinput_DirectInputDriver
#define _Included_de_hardcode_jxinput_directinput_DirectInputDriver

#ifdef __cplusplus
extern "C" {
#endif

/* Inaccessible static: sIsOperational */
/* Inaccessible static: sAxisValues */
/* Inaccessible static: sButtonStates */
/* Inaccessible static: sDirectionalValues */
/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    nativeinit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_nativeinit
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    nativeexit
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_nativeexit
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    bind
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_bind
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getNumberOfDevices
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getNumberOfDevices
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getName
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getName
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getNumberOfAxes
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getNumberOfAxes

  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getNumberOfButtons
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getNumberOfButtons
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getNumberOfDirectionals
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getNumberOfDirectionals
  (JNIEnv *, jclass, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getMaxNumberOfAxes
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getMaxNumberOfAxes
  (JNIEnv *, jclass);


/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getMaxNumberOfButtons
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getMaxNumberOfButtons
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getMaxNumberOfDirectionals
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getMaxNumberOfDirectionals
  (JNIEnv *, jclass);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    isAxisAvailable
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_isAxisAvailable
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getAxisName
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getAxisName
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getAxisType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getAxisType
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    isButtonAvailable
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_isButtonAvailable
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getButtonName
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getButtonName
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getButtonType
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getButtonType
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    isDirectionalAvailable
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_isDirectionalAvailable
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    getDirectionalName
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_getDirectionalName
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     de_hardcode_jxinput_directinput_DirectInputDriver
 * Method:    nativeupdate
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_de_hardcode_jxinput_directinput_DirectInputDriver_nativeupdate
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif

